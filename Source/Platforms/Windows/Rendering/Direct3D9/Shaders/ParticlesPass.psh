sampler2D GBufferPosition: register(s0);
sampler2D particleTexture: register(s1);

float4 texCoordsAdjustment:  register(c0);
float4 unprojectionVector:   register(c1);
float4 projectionParameters: register(c2);

struct PS_INPUT
{
        float4 textureCoords: TEXCOORD0;
        float4 position: TEXCOORD1;
        float4 color: TEXCOORD2;
};

float4 main(PS_INPUT In): COLOR0
{
        // compute tex coords
        In.position.xy /= In.position.w;
        // map texels to pixels
        In.position.xy += texCoordsAdjustment.xy;
        float2 TC = 0.5f * (float2(In.position.x, -In.position.y) + 1.0);

        float z = DecodeZEye(tex2D(GBufferPosition, TC), projectionParameters);
        float d = abs(In.position.z - z);

        float f = clamp(-1.0 / (d + 0.5) + 1.0, 0.0, 1.0);

        return float4(1.0.xxx, f) * In.color * tex2D(particleTexture, In.textureCoords.xy);
}
